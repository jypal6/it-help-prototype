import React, { useState, useEffect, useRef } from 'react';
import { Paperclip, Send, ExternalLink, HelpCircle, Info, FileText, MessageSquare, Calendar, Clock, AlertCircle, Edit } from 'lucide-react';

interface Message {
  id: string;
  sender: 'user' | 'copilot';
  text: React.ReactNode;
  timestamp: Date;
}

const copilotHoverCardText =
  'This is an AI-generated response. Copilot provides contextual help and suggestions based on your input.';

const TicketStatusChat: React.FC = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const [showSuggestion, setShowSuggestion] = useState(false);
  const [hoveredCopilotMsg, setHoveredCopilotMsg] = useState<string | null>(null);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  
  // Function to scroll to bottom of messages
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  // Auto-inject the initial user message
  useEffect(() => {
    const initialUserMessage = "Can you tell me the latest on the ticket raised a few days back?";
    if (messages.length === 0) {
      setMessages([
        {
          id: '1',
          sender: 'user',
          text: initialUserMessage,
          timestamp: new Date()
        }
      ]);
      
      // Simulate Copilot thinking and responding
      setTimeout(() => {
        addCopilotMessage(
          <>
            <div className="flex items-start mb-3">
              <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mr-3">
                <MessageSquare className="w-4 h-4 text-white" />
              </div>
              <div>
                <p>Sure. Here's the latest on your ticket:</p>
                
                <div className="mt-3 bg-blue-50 p-4 rounded-lg border-l-4 border-blue-600">
                  <p className="mb-2"><strong>üìÑ Ticket ID:</strong> 10482</p>
                  <p className="mb-2"><strong>üé´ Issue:</strong> Outlook calendar events not syncing across Windows desktop app</p>
                  <p className="mb-2"><strong>üìÖ Created On:</strong> July 2, 2025</p>
                  <p className="mb-2"><strong>üìà Current Status:</strong> <span className="text-amber-600 font-medium">Under active investigation</span></p>
                  <p className="mb-3"><strong>‚è±Ô∏è Last Updated:</strong> July 4, 9:45 AM</p>
                  
                  <h4 className="font-medium mb-2">üìù Progress Summary:</h4>
                  <div className="pl-4 border-l-2 border-blue-300 space-y-2">
                    <p><strong>Jul 2</strong> ‚Äì User reported Outlook calendar sync issue on Windows desktop client</p>
                    <p><strong>Jul 2</strong> ‚Äì Copilot walked user through steps: repair account, safe mode test, new profile creation</p>
                    <p><strong>Jul 2</strong> ‚Äì Issue persisted; ticket raised with full system and troubleshooting metadata</p>
                    <p><strong>Jul 3‚Äì4</strong> ‚Äì Support team analyzing Outlook client logs and sync queue processing</p>
                  </div>

                  <div className="mt-4 border-t border-blue-200 pt-3 flex justify-between items-center">
                    <a 
                      href="https://support.contoso.com/ticket/10482" 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="text-blue-600 hover:text-blue-800 flex items-center"
                    >
                      <FileText size={16} className="mr-1" /> View Ticket Online
                      <ExternalLink size={14} className="ml-1" />
                    </a>
                    
                    <button 
                      className="bg-gray-100 hover:bg-gray-200 text-gray-800 py-1 px-3 rounded text-sm flex items-center"
                      onClick={() => {/* Copy to clipboard functionality */}}
                    >
                      <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"></path>
                      </svg>
                      Copy Ticket ID
                    </button>
                  </div>
                </div>
                <p className="mt-3">We'll notify you here and by email as soon as there's an update or resolution.</p>
              </div>
            </div>
          </>
        );        
        // Show the suggestion after a delay
        setTimeout(() => {
          setShowSuggestion(true);
          scrollToBottom(); // Ensure we scroll after showing suggestions
        }, 5000);
      }, 500); // 0.5 second delay for initial response
    }
  }, [messages.length]);

  // Scroll to bottom whenever messages change
  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const addUserMessage = (text: string) => {
    const newMessage: Message = {
      id: `user-${Date.now()}`,
      sender: 'user',
      text: text,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, newMessage]);
    setInput('');
    setShowSuggestion(false);
    scrollToBottom(); // Ensure we scroll when a user message is added
  };

  const addCopilotMessage = (content: React.ReactNode) => {
    const newMessage: Message = {
      id: `copilot-${Date.now()}`,
      sender: 'copilot',
      text: content,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, newMessage]);
    scrollToBottom(); // Scroll to bottom when a new Copilot message is added
  };

  const handleWhyTakingLong = () => {
    addUserMessage("Why is this taking so long?");
    
    // Simulate Copilot thinking and responding
    setTimeout(() => {
      addCopilotMessage(
        <>
          <div className="flex items-start mb-3">
            <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mr-3">
              <MessageSquare className="w-4 h-4 text-white" />
            </div>
            <div>
              <p>Thanks for checking in. Here's what's happening with ticket <span className="font-mono bg-gray-100 px-1 rounded">10482</span>:</p>
              
              <div className="mt-3 bg-blue-50 p-4 rounded-lg border-l-4 border-blue-600">
                <h4 className="font-medium mb-2">üîé Detailed Investigation Status:</h4>
                <p className="mb-3">This issue appears tied to backend sync processes and Outlook desktop client interactions, which may require examining diagnostic logs, calendar object permissions, and sync queue activity. These investigations often require coordination across support systems and may take additional time.</p>
                
                <h4 className="font-medium mb-2">‚è±Ô∏è Current Investigation Timeline:</h4>
                <div className="pl-4 border-l-2 border-blue-300 space-y-2 mb-3">
                  <p className="flex items-start">
                    <span className="font-medium w-24 flex-shrink-0">Jul 2, 10:15 AM</span>
                    <span>‚Äì Initial ticket created</span>
                  </p>
                  <p className="flex items-start">
                    <span className="font-medium w-24 flex-shrink-0">Jul 2, 11:30 AM</span>
                    <span>‚Äì Assigned to Calendar Sync specialist team</span>
                  </p>
                  <p className="flex items-start">
                    <span className="font-medium w-24 flex-shrink-0">Jul 3, 9:20 AM</span>
                    <span>‚Äì Initial diagnostic logs review</span>
                  </p>
                  <p className="flex items-start">
                    <span className="font-medium w-24 flex-shrink-0">Jul 3, 3:45 PM</span>
                    <span>‚Äì Backend sync logs requested from Exchange team</span>
                  </p>
                  <p className="flex items-start">
                    <span className="font-medium w-24 flex-shrink-0">Jul 4, 9:45 AM</span>
                    <span>‚Äì Sync queue analysis in progress</span>
                  </p>
                </div>
                
                <div className="flex items-center justify-between bg-amber-50 p-2 rounded border border-amber-200">
                  <div className="flex items-center">
                    <Clock className="text-amber-600 mr-2" size={18} />
                    <span className="text-sm text-amber-800">Estimated resolution: <strong>1-2 business days</strong></span>
                  </div>
                  <span className="text-xs text-amber-600 bg-amber-100 py-1 px-2 rounded">Priority Level 2</span>
                </div>
                
                <p className="mt-3 text-sm">
                  <Info size={14} className="inline mr-1 text-blue-600" /> Referenced in <a href="#" className="text-blue-600 hover:underline">Microsoft KB-7723198: Calendar Sync Troubleshooting</a>
                </p>
              </div>
              <p className="mt-3">Our team is working on it and will provide an update as soon as possible. The issue may be related to recent changes in the Exchange Online calendar processing services.</p>
              
              <div className="mt-4">
                <button 
                  onClick={() => handleTicketUpdates()}
                  className="bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg text-sm flex items-center"
                >
                  <Edit size={16} className="mr-2" /> Can I make updates to the ticket?
                </button>
              </div>
            </div>
          </div>
        </>
      );
    }, 500); // 0.5 second delay
  };

  const handleTicketUpdates = () => {
    addUserMessage("Can I make updates to the ticket?");
    
    // Simulate Copilot thinking and responding
    setTimeout(() => {
      addCopilotMessage(
        <>
          <div className="flex items-start mb-3">
            <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mr-3">
              <MessageSquare className="w-4 h-4 text-white" />
            </div>
            <div>
              <p>Yes, you can make updates to your ticket. This can help our support team better understand your issue or provide additional information.</p>
              
              <div className="mt-3 bg-blue-50 p-4 rounded-lg">
                <h3 className="font-medium text-blue-800 mb-3">üìù Update Ticket #10482</h3>
                
                <div className="mb-3">
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Update type:
                  </label>
                  <div className="flex flex-wrap gap-2">
                    <button className="py-1 px-3 bg-white border border-gray-300 rounded-full text-sm hover:bg-gray-50">
                      Add information
                    </button>
                    <button className="py-1 px-3 bg-white border border-gray-300 rounded-full text-sm hover:bg-gray-50">
                      Change priority
                    </button>
                    <button className="py-1 px-3 bg-white border border-gray-300 rounded-full text-sm hover:bg-gray-50">
                      Attach files
                    </button>
                  </div>
                </div>
                
                <div className="mb-3">
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Additional information:
                  </label>
                  <textarea 
                    placeholder="Describe any new observations, error messages, or other relevant details..."
                    className="w-full p-2 border border-gray-300 rounded h-24"
                  />
                </div>
                
                <div className="flex space-x-2">
                  <button 
                    className="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg flex-1"
                    onClick={() => {
                      setTimeout(() => {
                        addCopilotMessage(
                          <>
                            <div className="flex items-start mb-3">
                              <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mr-3">
                                <MessageSquare className="w-4 h-4 text-white" />
                              </div>
                              <div>
                                <div className="mt-2 bg-green-50 p-3 rounded-lg border border-green-200">
                                  <div className="flex items-center">
                                    <svg className="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    <span className="text-green-800">Ticket #10482 has been updated successfully</span>
                                  </div>
                                </div>
                                <p className="mt-3">The support team has been notified of your update and will review the new information you've provided.</p>
                                <p className="mt-2">The estimated resolution time remains 1-2 business days, but the team may reach out sooner if they need additional details.</p>
                              </div>
                            </div>
                          </>
                        );
                      }, 500); // 0.5 second delay
                    }}
                  >
                    Submit Update
                  </button>
                  <button className="bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg">
                    Cancel
                  </button>
                </div>
              </div>
            </div>
          </div>
        </>
      );
    }, 500); // 0.5 second delay
  };

  const handleAddDetails = () => {
    addUserMessage("Can I add more details to my ticket?");
    
    // Simulate Copilot thinking and responding
    setTimeout(() => {
      addCopilotMessage(
        <>
          <div className="flex items-start mb-3">
            <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mr-3">
              <MessageSquare className="w-4 h-4 text-white" />
            </div>
            <div>
              <p>Yes, you can add more details to your ticket. This can help our support team better understand your issue.</p>
              <div className="mt-3 bg-blue-50 p-4 rounded-lg">
                <h3 className="font-medium text-blue-800 mb-3">üìù Add Details to Ticket #10482</h3>
                <div className="mb-3">
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Additional information:
                  </label>
                  <textarea 
                    placeholder="Describe any new observations, error messages, or other relevant details..."
                    className="w-full p-2 border border-gray-300 rounded h-24"
                  />
                </div>
                <div className="flex space-x-2">
                  <button 
                    onClick={() => {
                      setTimeout(() => {
                        addCopilotMessage(
                          <>
                            <div className="flex items-start mb-3">
                              <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mr-3">
                                <MessageSquare className="w-4 h-4 text-white" />
                              </div>
                              <div>
                                <div className="mt-2 bg-green-50 p-3 rounded-lg border border-green-200">
                                  <div className="flex items-center">
                                    <svg className="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    <span className="text-green-800">Additional information added to ticket #10482</span>
                                  </div>
                                </div>
                                <p className="mt-3">The support team has been notified of your update.</p>
                              </div>
                            </div>
                          </>
                        );
                      }, 500); // 0.5 second delay
                    }}
                    className="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg flex-1"
                  >
                    Submit Additional Information
                  </button>
                  <button 
                    className="bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg"
                  >
                    Cancel
                  </button>
                </div>
              </div>
              
              <p className="mt-3">You can also reply directly to the email notification you received about this ticket to add more information.</p>
            </div>
          </div>
        </>
      );
    }, 500); // 0.5 second delay
  };

  const handleSendMessage = (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim()) return;

    addUserMessage(input);

    setTimeout(() => {
      const lower = input.toLowerCase();
      if (lower.includes("why") && lower.includes("long")) {
        // Only trigger the 'why is this taking so long' flow
        handleWhyTakingLong();
      } else if (lower.includes("notif") || lower.includes("update")) {
        // Use the ticket updates flow
        handleTicketUpdates();
      } else if (lower.includes("add") && (lower.includes("detail") || lower.includes("info"))) {
        // Only trigger the add details flow
        handleAddDetails();
      }
    }, 500); // 0.5 second delay
  };

  return (
    <div className="bg-white rounded-lg shadow-md p-4 max-w-3xl mx-auto">
      <div className="flex items-center mb-4">
        <div className="w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center mr-3">
          <MessageSquare className="w-6 h-6 text-white" />
        </div>
        <h2 className="text-xl font-semibold text-gray-800">Ticket Status Chat</h2>
      </div>
      
      <div className="bg-gray-50 p-4 rounded-lg mb-4">
        <p className="text-sm text-gray-600 mb-2">
          This is an automated system to provide updates on your support ticket status. You can ask questions or request updates at any time.
        </p>
        <p className="text-sm text-gray-600">
          <strong>Note:</strong> For immediate assistance, please contact support directly at <a href="mailto:support@contoso.com" className="text-blue-600 hover:underline">support@contoso.com</a>
        </p>
      </div>
      
      <div className="max-h-[60vh] overflow-y-auto mb-4 pr-2" style={{ scrollBehavior: 'smooth' }}>
        {messages.map(msg => (
          <div key={msg.id} className={`mb-4 ${msg.sender === 'user' ? 'text-right' : 'text-left'}`}>
            <div className={`inline-block p-3 rounded-lg ${msg.sender === 'user' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-800'}`}>
              {msg.sender === 'user' && 
                <div className="text-xs text-gray-400 mb-1">
                  You
                </div>
              }
              {msg.text}
            </div>
          </div>
        ))}
        
        <div ref={messagesEndRef} />
      </div>
      
      <form onSubmit={handleSendMessage} className="flex">
        <textarea 
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="Type your message here..."
          className="flex-1 p-3 border border-gray-300 rounded-lg resize-none mr-2"
        />
        <button 
          type="submit"
          className="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg flex items-center"
        >
          <Send className="w-5 h-5 mr-2" />
          Send
        </button>
      </form>
      
      {showSuggestion && (
        <div className="mt-4 p-3 bg-blue-50 rounded-lg border-l-4 border-blue-600">
          <p className="text-sm text-blue-800">
            Need help with something else? Try asking:
          </p>
          <ul className="list-disc list-inside text-sm text-gray-700 mt-1">
            <li>What's the status of my ticket?</li>
            <li>Why is this taking so long?</li>
            <li>Can I make updates to the ticket?</li>
          </ul>
        </div>
      )}
    </div>
  );
};

export default TicketStatusChat;
