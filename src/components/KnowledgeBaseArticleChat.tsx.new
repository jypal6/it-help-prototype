import React, { useState, useRef, useEffect } from 'react';
import { Send, FileText, Clock, CheckCircle, AlertTriangle, Edit3 } from 'lucide-react';

// Define a type for all stages of the flow
type FlowStage = 
  | 'initial'
  | 'ticket-shared'
  | 'kb-selection'
  | 'draft-review'
  | 'edit-feedback'
  | 'final-confirmation'
  | 'complete';

// Define a type for our message objects
interface Message {
  id: string;
  type: 'user' | 'bot';
  content: React.ReactNode;
  timestamp: Date;
}

// Define the KB articles that will be shown as options
interface KBArticle {
  id: string;
  title: string;
  lastUpdated: string;
}

// Sample KB articles
const kbArticles: KBArticle[] = [
  { 
    id: 'kb001', 
    title: 'Resolving Camera Issues in Microsoft Teams (2023)', 
    lastUpdated: 'Dec 15, 2023' 
  },
  { 
    id: 'kb002', 
    title: 'Teams Hardware Compatibility Issues with New Devices', 
    lastUpdated: 'Mar 5, 2024' 
  },
  { 
    id: 'kb003', 
    title: 'Common Teams App Troubleshooting on Windows', 
    lastUpdated: 'Jun 22, 2024' 
  }
];

// Initial prompt that is automatically injected
const initialPrompt = "Help me update or create a KB article based on the new issue and resolution identified in a specific IT ticket.";

// Component for the KB Article Chat
const KnowledgeBaseArticleChat: React.FC = () => {
  // State for the user's input
  const [input, setInput] = useState('');
  
  // State for tracking the current stage of our flow
  const [currentStage, setCurrentStage] = useState<FlowStage>('initial');
  
  // State for selected KB article
  const [selectedKBArticle, setSelectedKBArticle] = useState<string | null>(null);
  
  // State for chat history
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      type: 'user',
      content: initialPrompt,
      timestamp: new Date()
    },
    {
      id: '2',
      type: 'bot',
      content: (
        <p>Sure. Please share the link to the IT ticket you'd like me to review.</p>
      ),
      timestamp: new Date()
    }
  ]);
  
  // Create a ref for auto-scrolling
  const messagesEndRef = useRef<HTMLDivElement>(null);
  
  // Function to scroll to bottom of messages
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };
  
  // Scroll to bottom whenever messages change
  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // Function to add a user message
  const addUserMessage = (text: string) => {
    const newMessage: Message = {
      id: `user-${Date.now()}`,
      type: 'user',
      content: text,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, newMessage]);
    setInput('');
    scrollToBottom();
  };

  // Function to add a bot message with React nodes for rich formatting
  const addBotMessage = (content: React.ReactNode) => {
    const newMessage: Message = {
      id: `bot-${Date.now()}`,
      type: 'bot',
      content: content,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, newMessage]);
    scrollToBottom();
  };

  // Function to get the current prompt suggestion based on the flow stage
  const getCurrentPromptSuggestion = () => {
    switch (currentStage) {
      case 'initial':
        return "Here's the ticket: https://support.corp.com/ticket/TSK-24581";
      case 'kb-selection':
        return "Let's go with the second one.";
      case 'draft-review':
        return "Yes, this is correct. Keep going.";
      case 'edit-feedback':
        return "Looks good overall. Can you improve the issue description to make it easier to detect the symptom?";
      case 'final-confirmation':
        return "Perfect. Please go ahead and save this.";
      default:
        return null;
    }
  };

  // Function to handle sending a message
  const sendMessage = (text: string = input) => {
    if (!text.trim()) return;

    // Add the user message
    addUserMessage(text);
    
    // Process the message based on current stage
    handleMessageByStage(text);
  };

  // Handle article selection functionality
  const handleArticleSelection = (articleId: string, title: string) => {
    setSelectedKBArticle(articleId);
    
    // First response
    setTimeout(() => {
      addBotMessage(
        <>
          <p>Got it. Let me extract the new issue and resolution details from the ticket.</p>
          
          <div className="mt-2 bg-blue-50 p-3 rounded border-l-4 border-blue-600 text-sm">
            <p className="font-medium text-blue-800 mb-2">New Issue Identified</p>
            <ul className="list-disc pl-5 space-y-1">
              <li>Teams camera not working on new Dell Latitude 7455 devices</li>
              <li>Occurs only when new webcam firmware version 3.2.7 is active</li>
            </ul>
            
            <p className="font-medium text-blue-800 mt-3 mb-1">Confirmed Resolution</p>
            <ul className="list-disc pl-5 space-y-1">
              <li>Manually disable UVC enhanced power management via registry</li>
              <li>Update Teams to latest internal build 1.6.00.27919</li>
            </ul>
          </div>
        </>
      );
      
      // Second response after a delay
      setTimeout(() => {
        addBotMessage(
          <>
            <p>Now that I've gathered that, I'll prepare a draft update and identify where this new content should be inserted.</p>
            
            <div className="mt-2 bg-blue-50 p-3 rounded border-l-4 border-blue-600 text-sm">
              <p className="font-medium text-blue-800 mb-2">Draft Update for KB Article â€“ {title}</p>
              
              <div className="bg-yellow-50 p-2 rounded border border-yellow-200 mb-2">
                <p className="font-medium text-yellow-800 text-xs">New Known Issue (Added July 2025)</p>
              </div>
              
              <p className="mb-1"><strong>Device Model:</strong> Dell Latitude 7455</p>
              <p className="mb-1"><strong>Symptom:</strong> Camera not detected in Teams (while functional in other apps)</p>
              <p className="mb-1"><strong>Cause:</strong> Webcam firmware v3.2.7 introduces UVC signaling issues</p>
              
              <p className="font-medium text-blue-800 mt-3 mb-1">Resolution</p>
              <ol className="list-decimal pl-5 space-y-1 text-xs">
                <li>Launch regedit</li>
                <li>Navigate to HKLM\SYSTEM\CurrentControlSet\Control\Class\{6BDD1FC6-810F-11D0-BEC7-08002BE2092F}</li>
                <li>Set EnableUVCManagement = 0</li>
                <li>Reboot device and update Teams to build 1.6.00.27919</li>
              </ol>
            </div>
            
            <p className="mt-2">Does this look accurate so far?</p>
          </>
        );
        setCurrentStage('draft-review');
      }, 2000);
    }, 1000);
  };

  // Function to handle AI response based on the current stage
  const handleMessageByStage = (text: string) => {
    // Handle the flow based on current stage
    switch(currentStage) {
      case 'initial':
        // If the user shared a ticket link
        if (text.includes('https://support.corp.com/ticket/')) {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>Thanks! Reviewing ticket TSK-24581...</p>
                
                <div className="mt-2 bg-blue-50 p-3 rounded border-l-4 border-blue-600 text-sm">
                  <p className="mb-1"><strong>Ticket Summary</strong></p>
                  <p className="mb-1"><strong>Issue:</strong> Teams camera not working on new Dell Latitude 7455 devices</p>
                  <p className="mb-1"><strong>Affected Users:</strong> 24 reported cases</p>
                  <p className="mb-1"><strong>Resolution:</strong> Manual registry update and Teams update</p>
                </div>
                
                <p className="mt-2">Based on the issue and resolution details, I found three potentially related KB articles:</p>
                
                <div className="mt-2 space-y-2">
                  {kbArticles.map((article, idx) => (
                    <div 
                      key={article.id}
                      className="bg-white p-2 rounded border border-gray-200 hover:border-blue-400 cursor-pointer transition-colors flex items-center"
                      onClick={() => handleArticleSelection(article.id, article.title)}
                    >
                      <FileText className="text-blue-600 mr-2" size={16} />
                      <div className="flex-grow">
                        <p className="text-sm font-medium">{article.title}</p>
                        <p className="text-xs text-gray-500">Last updated: {article.lastUpdated}</p>
                      </div>
                    </div>
                  ))}
                </div>
                
                <p className="mt-2">Please select the one you'd like to update.</p>
              </>
            );
            setCurrentStage('kb-selection');
          }, 1000);
        } else {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>I'm looking for a ticket link like <span className="font-mono bg-gray-100 px-1 rounded">https://support.corp.com/ticket/TSK-#####</span> to review the issue details.</p>
              </>
            );
          }, 1000);
        }
        break;
      
      case 'kb-selection':
        // Handle selection based on the text
        if (text.toLowerCase().includes('second') || text.includes('2') || text.includes('compatibility')) {
          handleArticleSelection('kb002', 'Teams Hardware Compatibility Issues with New Devices');
        } else if (text.toLowerCase().includes('first') || text.includes('1') || text.includes('camera issues')) {
          handleArticleSelection('kb001', 'Resolving Camera Issues in Microsoft Teams (2023)');
        } else if (text.toLowerCase().includes('third') || text.includes('3') || text.includes('troubleshooting')) {
          handleArticleSelection('kb003', 'Common Teams App Troubleshooting on Windows');
        } else {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>I'm not sure which KB article you want to select. Please specify by number (1, 2, or 3) or by name.</p>
              </>
            );
          }, 1000);
        }
        break;
      
      case 'draft-review':
        // User confirms the draft looks good
        if (text.toLowerCase().includes('yes') || text.toLowerCase().includes('correct') || text.toLowerCase().includes('good')) {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>I'll now integrate this content into the selected KB article and highlight the changes.</p>
                
                <div className="mt-2 bg-blue-50 p-3 rounded border-l-4 border-blue-600 text-sm">
                  <p className="font-medium text-blue-800 mb-2">Updated KB Preview</p>
                  <ul className="list-disc pl-5 space-y-1 text-xs">
                    <li>Inserted "New Known Issue" section below June 2024 updates</li>
                    <li>Added cross-reference to related tickets</li>
                    <li>Updated "Last Modified" date to July 4, 2025</li>
                  </ul>
                  
                  <div className="mt-2 bg-white p-2 rounded border border-gray-200 text-xs max-h-32 overflow-y-auto">
                    <p className="font-medium">Teams Hardware Compatibility Issues with New Devices</p>
                    <p className="text-gray-500 text-xs">Last modified: July 4, 2025</p>
                    <p className="mt-1">This article documents known hardware compatibility issues with Microsoft Teams...</p>
                    <p className="mt-1 font-medium">Contents</p>
                    <ul className="list-disc pl-5">
                      <li>Known Issues</li>
                      <li>Troubleshooting Steps</li>
                      <li>Registry Fixes</li>
                    </ul>
                    <div className="bg-green-50 p-1 rounded border border-green-200 mt-1">
                      <p className="font-medium text-green-800 text-xs">New Known Issue (Added July 2025)</p>
                      <p>Dell Latitude 7455 with webcam firmware v3.2.7...</p>
                    </div>
                  </div>
                </div>
                
                <p className="mt-2">Any edits needed before we finalize?</p>
              </>
            );
            setCurrentStage('edit-feedback');
          }, 1000);
        } else {
          setTimeout(() => {
            addBotMessage(<p>Got it. Let me know what corrections are needed for the draft.</p>);
          }, 1000);
        }
        break;
      
      case 'edit-feedback':
        // User requests edits
        if (text.toLowerCase().includes('improve') || text.toLowerCase().includes('symptom') || text.toLowerCase().includes('edit')) {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>Sure. I've improved the symptom description to make it more specific:</p>
                
                <div className="mt-2 bg-blue-50 p-3 rounded border-l-4 border-blue-600 text-sm">
                  <p className="font-medium text-blue-800 mb-2">Revised Symptom Description</p>
                  <div className="bg-red-50 p-1 rounded border border-red-100 mb-2 line-through text-xs">
                    <p>Camera not detected in Teams (while functional in other apps)</p>
                  </div>
                  <div className="bg-green-50 p-1 rounded border border-green-200 mb-2 text-xs">
                    <p><strong>Symptom:</strong> In Teams, camera is listed as "Not found" in device settings. Device Manager shows webcam present. Works in Zoom or Camera app.</p>
                  </div>
                </div>
                
                <p className="mt-2">Here's the updated section. Does this look better?</p>
              </>
            );
            setCurrentStage('final-confirmation');
          }, 1000);
        } else if (text.toLowerCase().includes('good') || text.toLowerCase().includes('fine') || text.toLowerCase().includes('looks')) {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>Great! I'll finalize the KB article update now. Would you like me to publish it?</p>
              </>
            );
            setCurrentStage('final-confirmation');
          }, 1000);
        } else {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>I'll make those revisions. Would you like to see the updated draft?</p>
              </>
            );
          }, 1000);
        }
        break;
      
      case 'final-confirmation':
        // User confirms final version
        if (text.toLowerCase().includes('yes') || text.toLowerCase().includes('perfect') || text.toLowerCase().includes('publish') || text.toLowerCase().includes('save')) {
          setTimeout(() => {
            addBotMessage(
              <>
                <div className="bg-green-50 p-3 rounded border border-green-200 flex items-center mb-2">
                  <CheckCircle className="text-green-600 mr-2" size={20} />
                  <div>
                    <p className="font-medium text-green-800">KB Article Update Successful</p>
                    <p className="text-sm text-green-700">Published and linked to ticket TSK-24581</p>
                  </div>
                </div>
                
                <p>Done! I've saved and submitted the KB article update for publishing. It's now queued for review and linked to ticket TSK-24581 for traceability.</p>
                
                <div className="mt-2 bg-blue-50 p-3 rounded border-l-4 border-blue-600 text-sm">
                  <p className="font-medium text-blue-800 mb-2">Next Steps</p>
                  <ul className="list-disc pl-5 space-y-1">
                    <li>Knowledge Base admins will review within 24 hours</li>
                    <li>The article is already searchable by support agents</li>
                    <li>Users who reported similar issues will be notified</li>
                  </ul>
                </div>
                
                <p className="mt-2">Is there anything else you'd like to do with this KB article?</p>
              </>
            );
            setCurrentStage('complete');
          }, 1000);
        } else {
          setTimeout(() => {
            addBotMessage(
              <>
                <p>I understand. What specific changes would you like to make before we finalize the KB article?</p>
              </>
            );
          }, 1000);
        }
        break;
      
      case 'complete':
        // Handle any follow-up after completion
        setTimeout(() => {
          addBotMessage(
            <>
              <p>Thanks for your feedback. Is there another KB article you'd like to work on?</p>
            </>
          );
        }, 1000);
        break;
    }
  };

  return (
    <div className="h-full flex flex-col">
      <div className="bg-white border-b flex items-center p-4">
        <FileText className="text-blue-600 mr-2" size={20} />
        <h1 className="text-lg font-medium">Knowledge Base Article Assistant</h1>
      </div>
      
      <div className="flex-1 overflow-y-auto p-4 bg-gray-50">
        {messages.map((message, index) => (
          <div key={index} className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'} mb-4`}>
            <div 
              className={`rounded-lg p-3 max-w-3/4 ${
                message.type === 'user'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white border border-gray-200 shadow-sm'
              }`}
            >
              <div className="flex items-center mb-1">
                {message.type === 'bot' ? (
                  <div className="w-6 h-6 rounded-full bg-blue-600 flex items-center justify-center mr-2">
                    <FileText className="w-3 h-3 text-white" />
                  </div>
                ) : (
                  <div className="w-6 h-6 rounded-full bg-gray-300 flex items-center justify-center mr-2">
                    <div className="w-3 h-3 bg-white rounded-full"></div>
                  </div>
                )}
                <span className="text-xs text-gray-400">
                  {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                </span>
              </div>
              
              <div className={message.type === 'user' ? 'text-white' : 'text-gray-800'}>
                {message.content}
              </div>
            </div>
          </div>
        ))}
        
        <div ref={messagesEndRef} />
      </div>
      
      {/* Input area */}
      <div className="border-t bg-white p-4">
        {getCurrentPromptSuggestion() && (
          <div className="mb-2 flex flex-wrap gap-2">
            <button
              className="text-xs bg-blue-50 hover:bg-blue-100 text-blue-700 rounded-full px-3 py-1 transition-colors"
              onClick={() => sendMessage(getCurrentPromptSuggestion() || '')}
            >
              {getCurrentPromptSuggestion()}
            </button>
          </div>
        )}
        
        <div className="flex items-center">
          <textarea
            className="flex-1 border rounded-l-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-400 resize-none"
            placeholder="Type a message..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyPress={(e) => {
              if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
              }
            }}
            rows={1}
          />
          <button
            className="bg-blue-600 hover:bg-blue-700 text-white rounded-r-lg p-2 h-full"
            onClick={() => sendMessage()}
            disabled={!input.trim()}
          >
            <Send size={20} />
          </button>
        </div>
      </div>
    </div>
  );
};

export default KnowledgeBaseArticleChat;
